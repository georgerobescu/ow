# ow—thesis chapter #2, platform

(or platform’s politics?)

* why github.com?
* terms and conditions
* git’s decentralised structure and github’s centralised one
* the potential of the readme file (ethics)
* intellectual property

* * *

In the construction of the user, platforms assume the role of making and giving space to them, and also to influence and shaping each of them.

github.com, as it happened with many other social platforms, is now hosting not only the project of programmers and software developers, but is used by big companies, like google, to share their open-source softwares.

In the same vein, this movement of expansion has attracted writers and designers, for one, over to the github’s platform, enriching a user population once primarily inhabited by people using `git` for work.

* * *

github.com is a curious platform because it acts as a possible shift in the understanding of labour.

Drawing from the free-software and open-source ethos and ethics, for which circulation, non-copyrights, collaboration and remixing of code are the funding values of how to approach work and how to do work, github.com implemented one of the most used tools to put in practice this kind of approach, `git`, at a world-wide level.

While github the company is born to be sustainable and making profits, selling for this reasons private repositories and custom integrations with one’s own private servers, at the same time they are spreading a particular set of ideas all over the commercial internet, some of which are very useful in producing a cultural shift on many areas of what labour means.

With labour on the internet often happening as a non-deliberate act (think of the CAPTCHAs [^1]), github creates a space where work is shared, complementary, remixed, discussed and improved.

[^1]: A CAPTCHA is a task that asks a user to prove he she is a human being, by typing a short combination of letters and numbers read by the user from a provided image. This typing is being used by many companies to scan and digitalise paper books more accurately than a robot could now—for now).

In relation to a possible future scenario defined by a post-work society, platforms like this could be used as a rough blueprint to organise labour in a way, perhaps, more suitable for certain kind of production executed for reasons other than earning a wage. Value will be produced and identified anyway, but will differ from money.

Though they are the first ones not following what they offer, as described below in regard to github’s copyrights over its own software, at a practical level a github user has to adapt his her workflow in relation to an environment born from a programming background. Most people joining github.com are part or move around this circle of production, still, such aspect is essential in drawing a line between labour, internet, and its users.

As computation replaces (or doubles) and transforms more and more parts of human life, data becomes the common material produced out of these processes. Far from suggesting that data takes the place of everything that build the world we live in, disembodying bodies of different kinds and abolishing materiality, I am more concerned and curious to explore how it affects the body and how we can read it and use it to readjust our understanding of what constitutes, in this case, work.

If used *en-masse*, github would be able to familiarise its users to many of the mechanisms taking place on many levels of what’s constitute a human life in the twenty-first century.

For example, data tracking, processing, reading, extracting and its usages is part of what defines the transformation between individuals to dividuals. Becoming numbers instead of retaining one’s personality might have seemed the only outcome characterising the new society of information, twenty five years ago.

But what if we embrace this for real and try to understand what are the processes put in place when tracking someone? How does computation look like when it becomes part of one’s existence, especially when most activities performed are turned into data-tracking and value extraction?

* * *

(terms and conditions)

In the overall exploration of what it means to move towards a posthuman society, where the human is not replaced by better, more advanced, or different entities, but rather realise his blindness in putting at the center of the world the anthropos as the supreme being, on github machine users are acknowledged and given some options.

They can be set up by other human users, to automate particular tasks for specific project repositories. To avoid spam or hacking, and in a way also a norm of human self-responsibility, these machine-user accounts cannot be automated in their  creation. A bot can’t create a bot account on github.com.

As a platform, github frames the requisites of a user to be at least of a teenager age (13 yo) and human, providing a name and email address, using one account per user—unless it’s a machine user, in that case it can be hooked up by many different human users—, taking care of one’s password and content uploaded, and, as a premium, having one slot for creating a machine user account (one github (human) user account comes with one machine user account included).

(git’s decentralised structure and github’s centralised one)

github.com works as an interface of `git`, making the activity of working together on the same project, and sharing new code easier.

Even though it is possible to set up one’s server with `git` installed, and create a web interface to facilitate the exchange and collaboration of projects, what github.com offers is, as many other internet services and or social platforms, the possibility to focus on what you want to do and not investing time in the underlaying infrastructure governing those very activities.

Perversely, github.com has become the most recognised and main used website for sharing `git`-based workflows. The perversion lies in the fact that in becoming this, it is going against the principles and architecture employed and suggested by `git`.

The two main factors are:
1. decentralisation of the infrastructure
2. copyrighting over github.com

In its inception, and to put it cynically, `git` is decentralised because its creators, Linus Torvald, was in need to get patches from various developers helping in the development of Linux. For this, he created a better Version Control System than the ones existing at the time (2005), in order to collect all the suggestions and improvements produced by an array of different contributors.

Decentralisation and ramification of a multiplicity of nodes was perfect for Torvald: more contributions, more choices to pick from or to fight against.

This is all happening also on github, with the exception that in this case this platform wants to be the main place for this kind of data and activities. But why replacing the internet? Sure, that’s what’s happening with facebook, which for many people has become “the internet”—the only thing to check for news, messages, etc. Same for gmail. The problem is that if any of this big overarching platforms are momentarily having problems (servers are down, a function doesn’t work, and so on), the repercussion are of a world-wide scale impact.

The problem with github.com copyrighting the software that makes it run is, that unlike any other repository hosted on its platform, github’s own project repository can’t be duplicated and used, improved, modified, etc.

Beside this being at odd with the fundamentals of `git`, it makes it very hard to create a relay effect, for which when github.com is having some issues, another “copy” of it takes over and keeps the service up and running. Of course for this to happen, many users of github.com should invest a small amount of money in duplicating on their personal server a perfect copy of github.com. Ideally then, if we would stretch this current limitation (the biggest limitation github.com has?), there would be an easy option in the configuration panel of each user account, through which set up a copy of github following some easy steps (or even in 1-click, a la Amazon and iTunes Store buying method).